# inject on_rpc_call of learn

set:load_balance_for_test=1,not_exit_on_log_failure=1

wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1
set:disable_load_balance=1

# wait until r1 becomes primary
config:{1,r1,[]}
state:{{r1,pri,1,0}}

set:disable_load_balance=0
wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1
set:disable_load_balance=1

# wait add learner r2 
wait:on_rpc_call:rpc_name=RPC_LEARN_ADD_LEARNER,from=r1,to=r2

# inject start learn
inject:on_rpc_call:rpc_name=RPC_LEARN,from=r2,to=r1

# r2 changes to error
state:{{r1,pri,1,0},{r2,err,1,0}}

# r2 removed
state:{{r1,pri,1,0}}

set:disable_load_balance=0

###
# after some time, meta_server will do load balance again,
# which will trigger r1 to add learner r2 again
###
wait:on_rpc_call:rpc_name=RPC_CONFIG_PROPOSAL,from=m,to=r1
wait:on_rpc_call:rpc_name=RPC_LEARN_ADD_LEARNER,from=r1,to=r2
wait:on_rpc_call:rpc_name=RPC_LEARN,from=r2,to=r1

# wait until server ready
config:{2,r1,[r2]}
state:{{r1,pri,2,0},{r2,sec,2,0}}

